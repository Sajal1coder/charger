Node.js & Express Full-Stack Assignment (5 Days)
Objective
The goal of this assignment is to assess your ability to build a full-stack application using
Node.js, Express, and any database of your choice. You will also create a frontend UI to
interact with the backend APIs and deploy the complete solution to the cloud.

📌 Requirements

1. Backend (Node.js, Express)
​

•​

Develop a REST API using Node.js and Express.

​

•​

Use any database of your choice (MongoDB, PostgreSQL, MySQL, etc.).

​

•​

Implement CRUD operations for charging stations:

​

•​

Create a new charging station.

​

•​

Read (List) all charging stations.

​

•​

Update a charging station.

​

•​

Delete a charging station.

​

•​

Implement User Authentication using JWT:

​

•​

Register (Signup) API.

​

•​

Login API (Issue JWT token).

​

•​

Protected Routes for managing charging stations.

​

•​

Store charging station details including:

​
•​
Name, Location (Latitude & Longitude), Status (Active/Inactive), Power
Output (kW), Connector Type.
2. Frontend (Vue.js)
​

•​

Create a Login Screen that interacts with the backend API.

​

•​

Build a Charger Listing Page:

​

•​

Display all onboarded chargers.

​

•​

Add filters (e.g., status, power output, connector type).

​

•​

Add/Edit/Delete chargers.

​

•​

Develop a Map View:

​
•​
Display all onboarded chargers on a map using Google Maps or
OpenStreetMap.
​

•​

Clicking a marker should show the charger details.

3. Deployment
​
•​
Deploy both the backend and frontend on any cloud platform (AWS,
Heroku, Vercel, Render, or Firebase Hosting).
​

•​

Ensure the backend has a public API endpoint accessible for testing.

​

1.​

GitHub Repository containing:

​

•​

Backend code (/backend folder).

​

•​

Frontend code (/frontend folder).

​

•​

README.md with setup instructions.

​

2.​

Deployed Application URL (Frontend).

​

3.​

Backend API URL (Swagger/Postman collection is a plus).

​

•​

Day 1: Set up Backend (CRUD for Charging Stations, Auth APIs)

​

•​

Day 2: Implement Frontend Login & Charger Listing

​

•​

Day 3: Integrate Map View & API Calls

​

•​

Day 4: Deploy & Submit

​

•​

GitHub Repo: Share the repository link with proper documentation.

​

•​

Live Deployed URL: Ensure we can access the frontend and test the APIs.

🚀 Deliverables

⏳ Timeframe: 5 Days

📩 Submission Guidelines

🚀

This assignment evaluates backend development, API integration, frontend UI, and
cloud deployment skills. Looking forward to your submission!

